worker_processes 1;
 
events { worker_connections 1024; }

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  # server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # include /etc/nginx/conf.d/*.conf;
  # include /etc/nginx/sites-enabled/*;

  server {

    listen 80;
    server_name frontend;
    
    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri $uri/ /index.html =404;
    }

    location /api/ { 
      proxy_http_version 1.1;
      #proxy_pass http://<ContainerName>:<PortNumber>; 
      # In our case Container name is as we setup in docker-compose `beservice` and port 8080
      proxy_pass http://back-spring:8080;   
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_cache_bypass $http_upgrade;
    }
    location /websocket/ { 
      proxy_http_version 1.1;
      #proxy_pass http://<ContainerName>:<PortNumber>; 
      # In our case Container name is as we setup in docker-compose `beservice` and port 8080
      proxy_pass http://back-spring:8080;   
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_cache_bypass $http_upgrade;
    }
  }
}